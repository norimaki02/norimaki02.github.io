<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Norimaki</title><link>https://norimaki02.github.io/posts/</link><description>Recent content in Posts on Norimaki</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><copyright>&lt;a href="https://creativecommons.org/licenses/by-nc/4.0/" target="_blank" rel="noopener">CC BY-NC 4.0&lt;/a></copyright><lastBuildDate>Sun, 16 May 2021 02:09:58 +0900</lastBuildDate><atom:link href="https://norimaki02.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Cについて</title><link>https://norimaki02.github.io/posts/2021/05/c%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/</link><pubDate>Sun, 16 May 2021 02:09:58 +0900</pubDate><guid>https://norimaki02.github.io/posts/2021/05/c%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/</guid><description>とりあえずC言語に対するまとめをつくりたくなったので書きます。
C言語の自己的な考え C言語はめんどくさいし、つまらない。 でも速度は速いし、いざ！となった時の強い味方。 以上
最初に学ぶべきかは
アメリカの超一流大学（MIT, CMU, UC Berkleyなどなど）は　コンピューターサイエンスの入門言語としてほとんどPythonを使ってて コンピューターサイエンスで世界の最前線を走っているカーネギーメロン大学は
http://reports-archive.adm.cs.cmu.edu/anon/2010/CMU-CS-10-140.pdf
プログラミングは現代教育において、コンピューターサイエンス専攻の学生だけではなく、すべての大学生が受けるべき科目になりつつあり、その中でも、非情報系の学生に対して、いわゆるcomputational thinkingに重点を置いています。したがって、言語の複雑さを隠したPythonが現時点で最良の選択　だそうです。
もちろん、C言語は無価値なものではなく必須言語だけどねぇって感じです
https://marycore.jp/programmer/c-lang-is-lorry/
上のリンクがわかりやすく書いてある。 アメリカの超一流工科大学でもそれを避けようとしてるのに、どうする？って話です。
Cで何作れる？ Cで作るのは非常に難しく面倒ですが 勉強になります
候補としては コンパイラ RDBMS
の2つですかね、死にますです。
https://www.sigbus.info/compilerbook　https://ohbarye.hatenablog.jp/entry/2020/04/17/sqlite-clone-db-tutorial
何か作りたい人、頑張って</description><content type="html"><![CDATA[<p>とりあえずC言語に対するまとめをつくりたくなったので書きます。</p>
<h2 id="c言語の自己的な考え">C言語の自己的な考え</h2>
<p>C言語はめんどくさいし、つまらない。
でも速度は速いし、いざ！となった時の強い味方。
以上</p>
<p>最初に学ぶべきかは</p>
<p>アメリカの超一流大学（MIT, CMU, UC Berkleyなどなど）は　
コンピューターサイエンスの入門言語としてほとんどPythonを使ってて
コンピューターサイエンスで世界の最前線を走っているカーネギーメロン大学は</p>
<p><a href="http://reports-archive.adm.cs.cmu.edu/anon/2010/CMU-CS-10-140.pdf">http://reports-archive.adm.cs.cmu.edu/anon/2010/CMU-CS-10-140.pdf</a></p>
<p>プログラミングは現代教育において、コンピューターサイエンス専攻の学生だけではなく、すべての大学生が受けるべき科目になりつつあり、その中でも、非情報系の学生に対して、いわゆるcomputational thinkingに重点を置いています。したがって、言語の複雑さを隠したPythonが現時点で最良の選択　だそうです。</p>
<p>もちろん、C言語は無価値なものではなく必須言語だけどねぇって感じです</p>
<p><a href="https://marycore.jp/programmer/c-lang-is-lorry/">https://marycore.jp/programmer/c-lang-is-lorry/</a></p>
<p>上のリンクがわかりやすく書いてある。
アメリカの超一流工科大学でもそれを避けようとしてるのに、どうする？って話です。</p>
<h2 id="cで何作れる">Cで何作れる？</h2>
<p>Cで作るのは非常に難しく面倒ですが
勉強になります</p>
<p>候補としては
コンパイラ
RDBMS</p>
<p>の2つですかね、死にますです。</p>
<p><a href="https://www.sigbus.info/compilerbook">https://www.sigbus.info/compilerbook</a>　</p>
<p><a href="https://ohbarye.hatenablog.jp/entry/2020/04/17/sqlite-clone-db-tutorial">https://ohbarye.hatenablog.jp/entry/2020/04/17/sqlite-clone-db-tutorial</a></p>
<p>何か作りたい人、頑張って</p>
]]></content></item><item><title>開発環境</title><link>https://norimaki02.github.io/posts/2021/04/%E9%96%8B%E7%99%BA%E7%92%B0%E5%A2%83/</link><pubDate>Thu, 29 Apr 2021 13:28:33 +0900</pubDate><guid>https://norimaki02.github.io/posts/2021/04/%E9%96%8B%E7%99%BA%E7%92%B0%E5%A2%83/</guid><description>開発環境とは 開発環境とは 文字通りプログラミングを作る環境のことを指しています。
そして、プログラミングにあたって 最強の障壁は開発環境となっています。 理由として上げられるのは
1.コンピュータの基礎的な構造を知っている必要がある。
2.トレンドが変わりやすい。
3.常にバージョンが変化しているため、失敗しやすい。
4.初心者が失敗した場合、連鎖的に沢山ぶっ壊れる。
などがあります。 実際自分もパソコンをリセットや、買い替えたり、直してもらったりしたことは 多くあります。 その中で学ぶこともあるので、プログラミングを行う人はあたって壊れろでもいいと思いますが 、たいていの場合諦める原因になるのが常でもあります。
ということでせっかくなので自分の開発環境のメモを兼ねて、トレンドや基本的なものを述べておきます。 自分もそんなにできないので、私の記事を見て失敗したとかは責任を取れません。
（というか最近の本が馬鹿みたいに難しい開発環境や応用性のない開発環境を勧めるからみんな困ってるんじゃないのとか思ったりします。）
注意事項 これだけは覚えていってほしいものを書いていきます。
１.面倒だが、英語でも公式の開発環境のソフトウェアの説明書やホームページを発見したら日本語のブログや記事は読むのをやめて、公式を読むこと。 これが一番正確です。ブログや記事を参考にするのもいいですが、 最終的には公式が最強です。
英語であることがほとんどですが 適当に読んでもどうにかなります。（自己否定）
2.CUI（コマンドプロント）は最高のお友達。 コマンドプロント、CUIというのはよくクラッカーまがいの登場人物のPCにある真っ黒なウィンドウのことです。
CUIと親友にならないとプログラミングは一生うまくいくようになりません。絶対です。ガチです。
3.Linux （OS）は最高のお友達。 LinuxはOSです。プログラミングに特化したOSと思ってくれてもいいです。（実はWindowsよりもLinuxのほうが れきしが古かったり…） Linuxの基本概念はWindowsと正反対のもので、 「自分のこと勉強してくれない奴のために俺は存在する気はない」 つまり、勉強しないと使いこなせないものです。 Linuxと親友になりましょう。
4.Mac_PCユーザーの方はさようなら Appleは面白い会社であり プログラミングの開発環境も自前で用意しているものがあります。 とても使いやすく、公式の説明書も日本語があったため 失敗することはあんまりないと思います。（M1チップで不具合があるらしいのはご愛敬） さようなら
注意事項は以上です。 最低限、これだけわかっていれば挫折することはグッと減らせます。 勉強することが多くない？と思う方、 安心してください。まだまだありますよ(⌒∇⌒)
本題 これからおススメ開発環境を紹介していきます。
自分と同じようにプログラミングかじりましたという方も知らないものもでてくると思います。
トレンドにバリバリのるためです。
無理に入れる必要はないので、へーこんなのもあるんだ暇があったら入れてみよう。 と思ってください。
Visual Studio code 開発環境のまとめ役のようなイメージです。 あんまり、単体では何もできません。 エディター、編集用画面だと思ってください。 下記のものと組み合わせることでとても使いやすくなってきます。 起動確認だけで最初は大丈夫です。
なんとなく出てきた文章を読んで見てもいいかもしれません。
ダウンロードはこちらから https://code.visualstudio.com/download
（Azureとかいう物も最近できましたが、あんまりいいという話を聞かないので無理に使う必要はないと思います。）
WSL(Windows Subsystem for Linux) 最近出てきた、めちゃくちゃ使いやすい物です。 予想としては、MacのLinux化が進んだことを受けて 今まで頑なにLinuxを拒んできたが流石にAppleにプログラマーが流れるぐらいなら&amp;hellip;.</description><content type="html"><![CDATA[<h2 id="開発環境とは">開発環境とは</h2>
<p>開発環境とは
文字通りプログラミングを作る環境のことを指しています。</p>
<p>そして、プログラミングにあたって
最強の障壁は開発環境となっています。
理由として上げられるのは</p>
<p>1.コンピュータの基礎的な構造を知っている必要がある。</p>
<p>2.トレンドが変わりやすい。</p>
<p>3.常にバージョンが変化しているため、失敗しやすい。</p>
<p>4.初心者が失敗した場合、連鎖的に沢山ぶっ壊れる。</p>
<p>などがあります。
実際自分もパソコンをリセットや、買い替えたり、直してもらったりしたことは
多くあります。
その中で学ぶこともあるので、プログラミングを行う人はあたって壊れろでもいいと思いますが
、たいていの場合諦める原因になるのが常でもあります。</p>
<p>ということでせっかくなので自分の開発環境のメモを兼ねて、トレンドや基本的なものを述べておきます。
自分もそんなにできないので、私の記事を見て失敗したとかは責任を取れません。</p>
<p>（というか最近の本が馬鹿みたいに難しい開発環境や応用性のない開発環境を勧めるからみんな困ってるんじゃないのとか思ったりします。）</p>
<h2 id="注意事項">注意事項</h2>
<p>これだけは覚えていってほしいものを書いていきます。</p>
<h3 id="１面倒だが英語でも公式の開発環境のソフトウェアの説明書やホームページを発見したら日本語のブログや記事は読むのをやめて公式を読むこと">１.面倒だが、英語でも公式の開発環境のソフトウェアの説明書やホームページを発見したら日本語のブログや記事は読むのをやめて、公式を読むこと。</h3>
<p>これが一番正確です。ブログや記事を参考にするのもいいですが、
最終的には公式が最強です。</p>
<p>英語であることがほとんどですが
適当に読んでもどうにかなります。（自己否定）</p>
<h3 id="2cuiコマンドプロントは最高のお友達">2.CUI（コマンドプロント）は最高のお友達。</h3>
<p>コマンドプロント、CUIというのはよくクラッカーまがいの登場人物のPCにある真っ黒なウィンドウのことです。</p>
<p>CUIと親友にならないとプログラミングは一生うまくいくようになりません。絶対です。ガチです。</p>
<h2 id="3linux-osは最高のお友達">3.Linux （OS）は最高のお友達。</h2>
<p>LinuxはOSです。プログラミングに特化したOSと思ってくれてもいいです。（実はWindowsよりもLinuxのほうが
れきしが古かったり…）
Linuxの基本概念はWindowsと正反対のもので、
「自分のこと勉強してくれない奴のために俺は存在する気はない」
つまり、勉強しないと使いこなせないものです。
Linuxと親友になりましょう。</p>
<h3 id="4mac_pcユーザーの方はさようなら">4.Mac_PCユーザーの方はさようなら</h3>
<p>Appleは面白い会社であり
プログラミングの開発環境も自前で用意しているものがあります。
とても使いやすく、公式の説明書も日本語があったため
失敗することはあんまりないと思います。（M1チップで不具合があるらしいのはご愛敬）
さようなら</p>
<p>注意事項は以上です。
最低限、これだけわかっていれば挫折することはグッと減らせます。
勉強することが多くない？と思う方、
安心してください。まだまだありますよ(⌒∇⌒)</p>
<h1 id="本題">本題</h1>
<p>これからおススメ開発環境を紹介していきます。</p>
<p>自分と同じようにプログラミングかじりましたという方も知らないものもでてくると思います。</p>
<p>トレンドにバリバリのるためです。</p>
<p>無理に入れる必要はないので、へーこんなのもあるんだ暇があったら入れてみよう。
と思ってください。</p>
<h3 id="visual-studio-code">Visual Studio code</h3>
<p>開発環境のまとめ役のようなイメージです。
あんまり、単体では何もできません。
エディター、編集用画面だと思ってください。
下記のものと組み合わせることでとても使いやすくなってきます。
起動確認だけで最初は大丈夫です。</p>
<p>なんとなく出てきた文章を読んで見てもいいかもしれません。</p>
<p>ダウンロードはこちらから
<a href="https://code.visualstudio.com/download">https://code.visualstudio.com/download</a></p>
<p>（Azureとかいう物も最近できましたが、あんまりいいという話を聞かないので無理に使う必要はないと思います。）</p>
<h3 id="wslwindows-subsystem-for-linux">WSL(Windows Subsystem for Linux)</h3>
<p>最近出てきた、めちゃくちゃ使いやすい物です。
予想としては、MacのLinux化が進んだことを受けて
今まで頑なにLinuxを拒んできたが流石にAppleにプログラマーが流れるぐらいなら&hellip;.
という考えで作ったものと思われます。</p>
<p>Powershellでダウンロードすることになると思います。
コマンドプロント（CUI）をWindowsではPowerShellと呼ぶようになりました。</p>
<p>安心してください。PowershellはPCを一発で壊せます。
友人の目の前でPowerShellを開かないように。
間違えないように、公式に沿ってインストールしてください。</p>
<p>公式ページ
<a href="https://docs.microsoft.com/ja-jp/windows/wsl/install-win10">https://docs.microsoft.com/ja-jp/windows/wsl/install-win10</a></p>
<p>これを進める理由は、VS code との親和性が極めて高いためです。</p>
<p>VS　code　と　WSL　を組み合わせることで　Linuxの開発環境を作ることができます。</p>
<p>拡張機能　Remote - WSL　を入れることでVS codeで WSL を操作できるようになるためです。</p>
<h3 id="docker-for-windows">Docker for windows</h3>
<p>うわさに聞いたことがあるであろうDockerです.
近年の業界の勢力図を大きく塗り替えたものですが、
案外簡単に使うことができます。</p>
<p>ここで書くには複雑なインストールとなるので、</p>
<p>入れたい方は自分のところに来てください。</p>
<p>利点としては、
絶対に他の開発環境が壊れない、ことです。
最強の開発環境と呼ばれる所以でもあります。</p>
<p>使い勝手もよく、あまりＰＣに負担もかけません。</p>
<p>実はこのブログもDockerを利用して書いていました。
今は諸事情によりWSLで書いていますが、とても使いやすいです。
（実は最近Docker自体が壊れてしまって、直したのですが壊れた原因を発見するまで動かすのを控えています。）</p>
<h3 id="android-studio">Android studio</h3>
<p>Comeing soon &hellip;</p>
<h3 id="anaconda-3python">Anaconda 3(Python)</h3>
<p>Comeing soon &hellip;</p>
<h3 id="github">Github</h3>
<p>Comeing soon &hellip;</p>
<h1 id="最後に">最後に</h1>
<p>他にも紹介すべきものが多くありますが、
上記の3つはすべて協調性を持って、一番簡単に、応用性がある開発環境です。
最低限３つを入れてみるといいかもしれません。</p>
<p>使い方も覚えなきゃいけないのですが、書いていたら切りがないので
どうにかします。</p>
<p>（書いていくうちにめちゃくちゃ面倒な話題を取り扱っている気がしてきています。）</p>
]]></content></item><item><title>RDBMSを作る(1)</title><link>https://norimaki02.github.io/posts/2021/04/rdbms%E3%82%92%E4%BD%9C%E3%82%8B1/</link><pubDate>Tue, 27 Apr 2021 01:31:56 +0900</pubDate><guid>https://norimaki02.github.io/posts/2021/04/rdbms%E3%82%92%E4%BD%9C%E3%82%8B1/</guid><description>RDBMS とは 関係データベース管理システム（かんけいデータベースかんりシステム）またはリレーショナルデータベースマネジメントシステム（英語: relational database management system、略称：RDBMS）は、関係データベース (RDB) の管理システムである。RDB がデータベースの種類を示すのに対して、RDBMS は RDB の実装を示す。標準問い合わせ言語として SQL を用いたアクセスを行うため、相対する言葉として RDBMS 以外のデータベースを意味する NoSQL (Not only SQL) がある。
だそうです。 https://ja.wikipedia.org/wiki/%E9%96%A2%E4%BF%82%E3%83%87%E3%83%BC%E3%82%BF%E3%83%99%E3%83%BC%E3%82%B9%E7%AE%A1%E7%90%86%E3%82%B7%E3%82%B9%E3%83%86%E3%83%A0
今回は雑誌に乗っていたRDBMSもどきを作ろうと思います。
開発環境 WSL　：　Ubuntu20.04
言語　：　Rust
エディター　：　VS　code
Rustでかくのでめちゃくちゃ時間がかかった
#　ディスクマネージャー Comeing soon&amp;hellip;</description><content type="html"><![CDATA[<h2 id="rdbms-とは">RDBMS とは</h2>
<p>関係データベース管理システム（かんけいデータベースかんりシステム）またはリレーショナルデータベースマネジメントシステム（英語: relational database management system、略称：RDBMS）は、関係データベース (RDB) の管理システムである。RDB がデータベースの種類を示すのに対して、RDBMS は RDB の実装を示す。標準問い合わせ言語として SQL を用いたアクセスを行うため、相対する言葉として RDBMS 以外のデータベースを意味する NoSQL (Not only SQL) がある。</p>
<p>だそうです。
<a href="https://ja.wikipedia.org/wiki/%E9%96%A2%E4%BF%82%E3%83%87%E3%83%BC%E3%82%BF%E3%83%99%E3%83%BC%E3%82%B9%E7%AE%A1%E7%90%86%E3%82%B7%E3%82%B9%E3%83%86%E3%83%A0">https://ja.wikipedia.org/wiki/%E9%96%A2%E4%BF%82%E3%83%87%E3%83%BC%E3%82%BF%E3%83%99%E3%83%BC%E3%82%B9%E7%AE%A1%E7%90%86%E3%82%B7%E3%82%B9%E3%83%86%E3%83%A0</a></p>
<p>今回は雑誌に乗っていたRDBMSもどきを作ろうと思います。</p>
<h1 id="開発環境">開発環境</h1>
<p>WSL　：　Ubuntu20.04</p>
<p>言語　：　Rust</p>
<p>エディター　：　VS　code</p>
<p>Rustでかくのでめちゃくちゃ時間がかかった</p>
<p>#　ディスクマネージャー
Comeing soon&hellip;</p>
]]></content></item><item><title>Youtuberの押し売り</title><link>https://norimaki02.github.io/posts/2021/04/youtuber%E3%81%AE%E6%8A%BC%E3%81%97%E5%A3%B2%E3%82%8A/</link><pubDate>Tue, 20 Apr 2021 18:30:44 +0900</pubDate><guid>https://norimaki02.github.io/posts/2021/04/youtuber%E3%81%AE%E6%8A%BC%E3%81%97%E5%A3%B2%E3%82%8A/</guid><description>休日何してますか？という質問に対して、Youtube見ていますと答える人の統計を取りたくなった今日この頃です。
ブログ（？）に書くことも思いつかないので、おススメのYoutuber書きます。
ヨビノリ 大学生必見のYoutuberといえばやはりヨビノリ
自分の学科には全く合っていませんが、研究の話が自分は好きです。 きまぐれクック 料理系のYoutuberで一番好きです。 特にケジャンの動画がよし ##　Fらん大生の就活チャンネル
ここからはマイナーで行きます。
イカレタ現実を教えてくれる動画の数々、すごい勉強になります。（信じるかは別） ##　スカイ三平
宇宙関係の動画ではこの人の右にでる人はいないっていうくらい知識があり、勉強になります。 韓国の宇宙事情も解説していておススメです。 これで終わりですかね。 暇な時見てください。 夜ごはん食べながら書いたので、おかしいところがあったらすみません。</description><content type="html"><![CDATA[<p>休日何してますか？という質問に対して、Youtube見ていますと答える人の統計を取りたくなった今日この頃です。</p>
<p>ブログ（？）に書くことも思いつかないので、おススメのYoutuber書きます。</p>
<h2 id="ヨビノリ">ヨビノリ</h2>
<p>大学生必見のYoutuberといえばやはりヨビノリ</p>
<p>自分の学科には全く合っていませんが、研究の話が自分は好きです。

<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube.com/embed/voFHToRM4xI" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>
</p>
<h2 id="きまぐれクック">きまぐれクック</h2>
<p>料理系のYoutuberで一番好きです。
特にケジャンの動画がよし

<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube.com/embed/VRPHbYJspHQ" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>
</p>
<p>##　Fらん大生の就活チャンネル</p>
<p>ここからはマイナーで行きます。</p>
<p>イカレタ現実を教えてくれる動画の数々、すごい勉強になります。（信じるかは別）

<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube.com/embed/HqWCAeWxSPc" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>
</p>
<p>##　スカイ三平</p>
<p>宇宙関係の動画ではこの人の右にでる人はいないっていうくらい知識があり、勉強になります。
韓国の宇宙事情も解説していておススメです。

<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube.com/embed/CzCJQEIdHEs" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>
</p>
<p>これで終わりですかね。
暇な時見てください。
夜ごはん食べながら書いたので、おかしいところがあったらすみません。</p>
]]></content></item><item><title>hugoで詰まったところ</title><link>https://norimaki02.github.io/posts/2021/04/hugo%E3%81%A7%E8%A9%B0%E3%81%BE%E3%81%A3%E3%81%9F%E3%81%A8%E3%81%93%E3%82%8D/</link><pubDate>Thu, 01 Apr 2021 22:55:50 +0900</pubDate><guid>https://norimaki02.github.io/posts/2021/04/hugo%E3%81%A7%E8%A9%B0%E3%81%BE%E3%81%A3%E3%81%9F%E3%81%A8%E3%81%93%E3%82%8D/</guid><description>ホームページ製作過程も含む</description><content type="html"><![CDATA[<h2 id="hugo-とは">Hugo とは　</h2>
<p>Goで記述された静的サイトジェネレーターであり、webページの読み込みが高速になりやすくフリーなことも魅力です。
上記の理由からHugoを使ってみました。
<a href="https://qiita.com/peaceiris/items/ef38cc2a4b5565d0dd7c">https://qiita.com/peaceiris/items/ef38cc2a4b5565d0dd7c</a></p>
<p>HugoについてはURLを見てくれるとよくわかると思うのですが、その中でも詰まったところを書いていきたいと思います。</p>
<h2 id="環境">環境</h2>
<p>まずWSL　UbuntuにHugoをインストールし、使用しました。
Windowsでは無理がありそうなことをインストールページは書いていたので、WSLにしました。
Dockerも考えましたが、OS　がWindowsでありクラッシュしやすいので諦めました。
その後は公式のチュートリアルに乗っ取りました。</p>
<h2 id="詰まったところ">詰まったところ</h2>
<p>詰まったところはhugo server というコマンドでサイトをローカルで起動できるのですが、
その中ではうまくいっているのに、githubに公開するとデザインが崩壊することです。
3時間ぐらい詰まり、ソースコードを眺めているとURLの設定が初期設定だったことで全く画像がCSSに結びついていないことにありました。
そのせいで画像が配置されなくなり、デザインが崩壊していたのです。
URLをちゃんと定義したら直りました。</p>
<p>また、デザインの設定が複雑になりがちなことです。Testページを作り、挙動などを検査していたのですが内部のエンジンのトリガーが不明なデザインがまだ多くあります。
たぶんファイル名などに反応していると推測されますが、あまりドキュメントに書かれておらずわかりません。
word数など理解できていないことが多くあります。
生成されたソースコードを読むと危ないことはしていないようですが、hugoを利用しるときは気を付けてください。</p>
<p>Netlifyに上げるときはSubmodule　としてthemesをaddすること。
書いてあるページが少なかったのですが、試しにNetlifyを使用してみた時うまくいかなかったときがあります。
理由はcloneではいけないことにありました。
themesはcloneしないようにHugoでは気を付けるといいと思います。</p>
<h2 id="終わりに">終わりに</h2>
<p>Homepageを作ったのは初めてなのですが、読み込みも速くすることができて、とても満足しています。
静的なサイトを作るときはぜひHugoを利用することをおススメします。</p>
]]></content></item><item><title>Post_about</title><link>https://norimaki02.github.io/posts/2021/03/post_about/</link><pubDate>Tue, 30 Mar 2021 11:56:06 +0900</pubDate><guid>https://norimaki02.github.io/posts/2021/03/post_about/</guid><description>Post とは 趣味や日常に関しての記事をPostには公開していこうと思っています。 日記運用になると思います。</description><content type="html">&lt;h1 id="post-とは">Post とは&lt;/h1>
&lt;p>趣味や日常に関しての記事をPostには公開していこうと思っています。
日記運用になると思います。&lt;/p></content></item></channel></rss>